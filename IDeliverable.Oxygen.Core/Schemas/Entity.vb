'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.1
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System.Xml.Serialization

'
'This source code was auto-generated by xsd, Version=4.0.30319.1.
'

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18"),  _
 System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18", IsNullable:=false)>  _
Partial Public Class Entity
    Inherits Object
    Implements System.ComponentModel.INotifyPropertyChanged
    
    Private settingsFilePathField As String
    
    Private propertyField() As EntityProperty
    
    Private stringConversionField As EntityStringConversion
    
    Private serializationField As EntitySerialization
    
    Private sortingField As EntitySorting
    
    Private entityGenerationField As EntityEntityGeneration
    
    Private databaseMappingField As EntityDatabaseMapping
    
    Private nameField As String
    
    Private descriptionField As String
    
    Private inheritsField As String
    
    Private implementsField As String
    
    Private accessibilityModifierField As TypeAccessibilityModifier
    
    Private inheritanceModifierField As TypeInheritanceModifier
    
    Public Sub New()
        MyBase.New
        Me.accessibilityModifierField = TypeAccessibilityModifier.[Public]
        Me.inheritanceModifierField = TypeInheritanceModifier.None
    End Sub
    
    '''<remarks/>
    Public Property SettingsFilePath() As String
        Get
            Return Me.settingsFilePathField
        End Get
        Set
            Me.settingsFilePathField = value
            Me.RaisePropertyChanged("SettingsFilePath")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlElementAttribute("Property")>  _
    Public Property [Property]() As EntityProperty()
        Get
            Return Me.propertyField
        End Get
        Set
            Me.propertyField = value
            Me.RaisePropertyChanged("Property")
        End Set
    End Property
    
    '''<remarks/>
    Public Property StringConversion() As EntityStringConversion
        Get
            Return Me.stringConversionField
        End Get
        Set
            Me.stringConversionField = value
            Me.RaisePropertyChanged("StringConversion")
        End Set
    End Property
    
    '''<remarks/>
    Public Property Serialization() As EntitySerialization
        Get
            Return Me.serializationField
        End Get
        Set
            Me.serializationField = value
            Me.RaisePropertyChanged("Serialization")
        End Set
    End Property
    
    '''<remarks/>
    Public Property Sorting() As EntitySorting
        Get
            Return Me.sortingField
        End Get
        Set
            Me.sortingField = value
            Me.RaisePropertyChanged("Sorting")
        End Set
    End Property
    
    '''<remarks/>
    Public Property EntityGeneration() As EntityEntityGeneration
        Get
            Return Me.entityGenerationField
        End Get
        Set
            Me.entityGenerationField = value
            Me.RaisePropertyChanged("EntityGeneration")
        End Set
    End Property
    
    '''<remarks/>
    Public Property DatabaseMapping() As EntityDatabaseMapping
        Get
            Return Me.databaseMappingField
        End Get
        Set
            Me.databaseMappingField = value
            Me.RaisePropertyChanged("DatabaseMapping")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute()>  _
    Public Property Name() As String
        Get
            Return Me.nameField
        End Get
        Set
            Me.nameField = value
            Me.RaisePropertyChanged("Name")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute()>  _
    Public Property Description() As String
        Get
            Return Me.descriptionField
        End Get
        Set
            Me.descriptionField = value
            Me.RaisePropertyChanged("Description")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute()>  _
    Public Property [Inherits]() As String
        Get
            Return Me.inheritsField
        End Get
        Set
            Me.inheritsField = value
            Me.RaisePropertyChanged("Inherits")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute()>  _
    Public Property [Implements]() As String
        Get
            Return Me.implementsField
        End Get
        Set
            Me.implementsField = value
            Me.RaisePropertyChanged("Implements")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute(),  _
     System.ComponentModel.DefaultValueAttribute(TypeAccessibilityModifier.[Public])>  _
    Public Property AccessibilityModifier() As TypeAccessibilityModifier
        Get
            Return Me.accessibilityModifierField
        End Get
        Set
            Me.accessibilityModifierField = value
            Me.RaisePropertyChanged("AccessibilityModifier")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute(),  _
     System.ComponentModel.DefaultValueAttribute(TypeInheritanceModifier.None)>  _
    Public Property InheritanceModifier() As TypeInheritanceModifier
        Get
            Return Me.inheritanceModifierField
        End Get
        Set
            Me.inheritanceModifierField = value
            Me.RaisePropertyChanged("InheritanceModifier")
        End Set
    End Property
    
    Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
    
    Protected Sub RaisePropertyChanged(ByVal propertyName As String)
        Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
        If (Not (propertyChanged) Is Nothing) Then
            propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Partial Public Class EntityProperty
    Inherits Object
    Implements System.ComponentModel.INotifyPropertyChanged
    
    Private identifierField As EntityPropertyIdentifier
    
    Private nameField As String
    
    Private clrTypeField As String
    
    Private descriptionField As String
    
    Private isReadOnlyField As Boolean
    
    Private isNullableField As Boolean
    
    Private allowNullField As Boolean
    
    Private accessibilityModifierField As MemberAccessibilityModifier
    
    Private inheritanceModifierField As MemberInheritanceModifier
    
    Public Sub New()
        MyBase.New
        Me.isReadOnlyField = false
        Me.allowNullField = false
        Me.accessibilityModifierField = MemberAccessibilityModifier.[Public]
        Me.inheritanceModifierField = MemberInheritanceModifier.None
    End Sub
    
    '''<remarks/>
    Public Property Identifier() As EntityPropertyIdentifier
        Get
            Return Me.identifierField
        End Get
        Set
            Me.identifierField = value
            Me.RaisePropertyChanged("Identifier")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute()>  _
    Public Property Name() As String
        Get
            Return Me.nameField
        End Get
        Set
            Me.nameField = value
            Me.RaisePropertyChanged("Name")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute()>  _
    Public Property ClrType() As String
        Get
            Return Me.clrTypeField
        End Get
        Set
            Me.clrTypeField = value
            Me.RaisePropertyChanged("ClrType")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute()>  _
    Public Property Description() As String
        Get
            Return Me.descriptionField
        End Get
        Set
            Me.descriptionField = value
            Me.RaisePropertyChanged("Description")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute(),  _
     System.ComponentModel.DefaultValueAttribute(false)>  _
    Public Property IsReadOnly() As Boolean
        Get
            Return Me.isReadOnlyField
        End Get
        Set
            Me.isReadOnlyField = value
            Me.RaisePropertyChanged("IsReadOnly")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute()>  _
    Public Property IsNullable() As Boolean
        Get
            Return Me.isNullableField
        End Get
        Set
            Me.isNullableField = value
            Me.RaisePropertyChanged("IsNullable")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute(),  _
     System.ComponentModel.DefaultValueAttribute(false)>  _
    Public Property AllowNull() As Boolean
        Get
            Return Me.allowNullField
        End Get
        Set
            Me.allowNullField = value
            Me.RaisePropertyChanged("AllowNull")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute(),  _
     System.ComponentModel.DefaultValueAttribute(MemberAccessibilityModifier.[Public])>  _
    Public Property AccessibilityModifier() As MemberAccessibilityModifier
        Get
            Return Me.accessibilityModifierField
        End Get
        Set
            Me.accessibilityModifierField = value
            Me.RaisePropertyChanged("AccessibilityModifier")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute(),  _
     System.ComponentModel.DefaultValueAttribute(MemberInheritanceModifier.None)>  _
    Public Property InheritanceModifier() As MemberInheritanceModifier
        Get
            Return Me.inheritanceModifierField
        End Get
        Set
            Me.inheritanceModifierField = value
            Me.RaisePropertyChanged("InheritanceModifier")
        End Set
    End Property
    
    Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
    
    Protected Sub RaisePropertyChanged(ByVal propertyName As String)
        Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
        If (Not (propertyChanged) Is Nothing) Then
            propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Partial Public Class EntityPropertyIdentifier
    Inherits Object
    Implements System.ComponentModel.INotifyPropertyChanged
    
    Private defaultValueField As String
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute()>  _
    Public Property DefaultValue() As String
        Get
            Return Me.defaultValueField
        End Get
        Set
            Me.defaultValueField = value
            Me.RaisePropertyChanged("DefaultValue")
        End Set
    End Property
    
    Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
    
    Protected Sub RaisePropertyChanged(ByVal propertyName As String)
        Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
        If (Not (propertyChanged) Is Nothing) Then
            propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Public Enum MemberAccessibilityModifier
    
    '''<remarks/>
    [Public]
    
    '''<remarks/>
    [Friend]
    
    '''<remarks/>
    ProtectedFriend
    
    '''<remarks/>
    [Protected]
    
    '''<remarks/>
    [Private]
End Enum

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Public Enum MemberInheritanceModifier
    
    '''<remarks/>
    None
    
    '''<remarks/>
    [Overridable]
    
    '''<remarks/>
    [MustOverride]
    
    '''<remarks/>
    [Overrides]
    
    '''<remarks/>
    OverridesNotOverridable
    
    '''<remarks/>
    [Shadows]
End Enum

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Partial Public Class EntityStringConversion
    Inherits Object
    Implements System.ComponentModel.INotifyPropertyChanged
    
    Private formatField As String
    
    Private propertyNameField() As String
    
    '''<remarks/>
    Public Property Format() As String
        Get
            Return Me.formatField
        End Get
        Set
            Me.formatField = value
            Me.RaisePropertyChanged("Format")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlElementAttribute("PropertyName")>  _
    Public Property PropertyName() As String()
        Get
            Return Me.propertyNameField
        End Get
        Set
            Me.propertyNameField = value
            Me.RaisePropertyChanged("PropertyName")
        End Set
    End Property
    
    Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
    
    Protected Sub RaisePropertyChanged(ByVal propertyName As String)
        Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
        If (Not (propertyChanged) Is Nothing) Then
            propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Partial Public Class EntitySerialization
    Inherits Object
    Implements System.ComponentModel.INotifyPropertyChanged
    
    Private modeField As SerializationMode
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute()>  _
    Public Property Mode() As SerializationMode
        Get
            Return Me.modeField
        End Get
        Set
            Me.modeField = value
            Me.RaisePropertyChanged("Mode")
        End Set
    End Property
    
    Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
    
    Protected Sub RaisePropertyChanged(ByVal propertyName As String)
        Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
        If (Not (propertyChanged) Is Nothing) Then
            propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Public Enum SerializationMode
    
    '''<remarks/>
    DataContract
    
    '''<remarks/>
    ISerializable
End Enum

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Partial Public Class EntitySorting
    Inherits Object
    Implements System.ComponentModel.INotifyPropertyChanged
    
    Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
    
    Protected Sub RaisePropertyChanged(ByVal propertyName As String)
        Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
        If (Not (propertyChanged) Is Nothing) Then
            propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Partial Public Class EntityEntityGeneration
    Inherits Object
    Implements System.ComponentModel.INotifyPropertyChanged
    
    Private targetProjectNameField As String
    
    Private targetSubFolderField As String
    
    Private targetNamespaceField As String
    
    Private targetLanguageField As String
    
    Private importNamespaceField() As String
    
    Private isEnabledField As Boolean
    
    Public Sub New()
        MyBase.New
        Me.isEnabledField = true
    End Sub
    
    '''<remarks/>
    Public Property TargetProjectName() As String
        Get
            Return Me.targetProjectNameField
        End Get
        Set
            Me.targetProjectNameField = value
            Me.RaisePropertyChanged("TargetProjectName")
        End Set
    End Property
    
    '''<remarks/>
    Public Property TargetSubFolder() As String
        Get
            Return Me.targetSubFolderField
        End Get
        Set
            Me.targetSubFolderField = value
            Me.RaisePropertyChanged("TargetSubFolder")
        End Set
    End Property
    
    '''<remarks/>
    Public Property TargetNamespace() As String
        Get
            Return Me.targetNamespaceField
        End Get
        Set
            Me.targetNamespaceField = value
            Me.RaisePropertyChanged("TargetNamespace")
        End Set
    End Property
    
    '''<remarks/>
    Public Property TargetLanguage() As String
        Get
            Return Me.targetLanguageField
        End Get
        Set
            Me.targetLanguageField = value
            Me.RaisePropertyChanged("TargetLanguage")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlElementAttribute("ImportNamespace")>  _
    Public Property ImportNamespace() As String()
        Get
            Return Me.importNamespaceField
        End Get
        Set
            Me.importNamespaceField = value
            Me.RaisePropertyChanged("ImportNamespace")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute(),  _
     System.ComponentModel.DefaultValueAttribute(true)>  _
    Public Property IsEnabled() As Boolean
        Get
            Return Me.isEnabledField
        End Get
        Set
            Me.isEnabledField = value
            Me.RaisePropertyChanged("IsEnabled")
        End Set
    End Property
    
    Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
    
    Protected Sub RaisePropertyChanged(ByVal propertyName As String)
        Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
        If (Not (propertyChanged) Is Nothing) Then
            propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Partial Public Class EntityDatabaseMapping
    Inherits Object
    Implements System.ComponentModel.INotifyPropertyChanged
    
    Private propertyMappingField() As EntityDatabaseMappingPropertyMapping
    
    Private objectAccessorField() As EntityDatabaseMappingObjectAccessor
    
    Private scalarAccessorField() As EntityDatabaseMappingScalarAccessor
    
    Private dalcGenerationField As EntityDatabaseMappingDalcGeneration
    
    Private storedProceduresGenerationField As EntityDatabaseMappingStoredProceduresGeneration
    
    Private tableNameField As String
    
    Private concurrencyManagementField As EntityDatabaseMappingConcurrencyManagement
    
    Private pagingIsEnabledField As Boolean
    
    Private isReadOnlyField As Boolean
    
    Public Sub New()
        MyBase.New
        Me.pagingIsEnabledField = false
        Me.isReadOnlyField = false
    End Sub
    
    '''<remarks/>
    <System.Xml.Serialization.XmlElementAttribute("PropertyMapping")>  _
    Public Property PropertyMapping() As EntityDatabaseMappingPropertyMapping()
        Get
            Return Me.propertyMappingField
        End Get
        Set
            Me.propertyMappingField = value
            Me.RaisePropertyChanged("PropertyMapping")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlElementAttribute("ObjectAccessor")>  _
    Public Property ObjectAccessor() As EntityDatabaseMappingObjectAccessor()
        Get
            Return Me.objectAccessorField
        End Get
        Set
            Me.objectAccessorField = value
            Me.RaisePropertyChanged("ObjectAccessor")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlElementAttribute("ScalarAccessor")>  _
    Public Property ScalarAccessor() As EntityDatabaseMappingScalarAccessor()
        Get
            Return Me.scalarAccessorField
        End Get
        Set
            Me.scalarAccessorField = value
            Me.RaisePropertyChanged("ScalarAccessor")
        End Set
    End Property
    
    '''<remarks/>
    Public Property DalcGeneration() As EntityDatabaseMappingDalcGeneration
        Get
            Return Me.dalcGenerationField
        End Get
        Set
            Me.dalcGenerationField = value
            Me.RaisePropertyChanged("DalcGeneration")
        End Set
    End Property
    
    '''<remarks/>
    Public Property StoredProceduresGeneration() As EntityDatabaseMappingStoredProceduresGeneration
        Get
            Return Me.storedProceduresGenerationField
        End Get
        Set
            Me.storedProceduresGenerationField = value
            Me.RaisePropertyChanged("StoredProceduresGeneration")
        End Set
    End Property
    
    '''<remarks/>
    Public Property TableName() As String
        Get
            Return Me.tableNameField
        End Get
        Set
            Me.tableNameField = value
            Me.RaisePropertyChanged("TableName")
        End Set
    End Property
    
    '''<remarks/>
    Public Property ConcurrencyManagement() As EntityDatabaseMappingConcurrencyManagement
        Get
            Return Me.concurrencyManagementField
        End Get
        Set
            Me.concurrencyManagementField = value
            Me.RaisePropertyChanged("ConcurrencyManagement")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute(),  _
     System.ComponentModel.DefaultValueAttribute(false)>  _
    Public Property PagingIsEnabled() As Boolean
        Get
            Return Me.pagingIsEnabledField
        End Get
        Set
            Me.pagingIsEnabledField = value
            Me.RaisePropertyChanged("PagingIsEnabled")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute(),  _
     System.ComponentModel.DefaultValueAttribute(false)>  _
    Public Property IsReadOnly() As Boolean
        Get
            Return Me.isReadOnlyField
        End Get
        Set
            Me.isReadOnlyField = value
            Me.RaisePropertyChanged("IsReadOnly")
        End Set
    End Property
    
    Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
    
    Protected Sub RaisePropertyChanged(ByVal propertyName As String)
        Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
        If (Not (propertyChanged) Is Nothing) Then
            propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Partial Public Class EntityDatabaseMappingPropertyMapping
    Inherits Object
    Implements System.ComponentModel.INotifyPropertyChanged
    
    Private propertyNameField As String
    
    Private propertyNullValueField As String
    
    Private dataColumnField As EntityDatabaseMappingPropertyMappingDataColumn
    
    Private storeAsStringField As Boolean
    
    Private isEnumField As Boolean
    
    Public Sub New()
        MyBase.New
        Me.storeAsStringField = false
        Me.isEnumField = false
    End Sub
    
    '''<remarks/>
    Public Property PropertyName() As String
        Get
            Return Me.propertyNameField
        End Get
        Set
            Me.propertyNameField = value
            Me.RaisePropertyChanged("PropertyName")
        End Set
    End Property
    
    '''<remarks/>
    Public Property PropertyNullValue() As String
        Get
            Return Me.propertyNullValueField
        End Get
        Set
            Me.propertyNullValueField = value
            Me.RaisePropertyChanged("PropertyNullValue")
        End Set
    End Property
    
    '''<remarks/>
    Public Property DataColumn() As EntityDatabaseMappingPropertyMappingDataColumn
        Get
            Return Me.dataColumnField
        End Get
        Set
            Me.dataColumnField = value
            Me.RaisePropertyChanged("DataColumn")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute(),  _
     System.ComponentModel.DefaultValueAttribute(false)>  _
    Public Property StoreAsString() As Boolean
        Get
            Return Me.storeAsStringField
        End Get
        Set
            Me.storeAsStringField = value
            Me.RaisePropertyChanged("StoreAsString")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute(),  _
     System.ComponentModel.DefaultValueAttribute(false)>  _
    Public Property IsEnum() As Boolean
        Get
            Return Me.isEnumField
        End Get
        Set
            Me.isEnumField = value
            Me.RaisePropertyChanged("IsEnum")
        End Set
    End Property
    
    Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
    
    Protected Sub RaisePropertyChanged(ByVal propertyName As String)
        Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
        If (Not (propertyChanged) Is Nothing) Then
            propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Partial Public Class EntityDatabaseMappingPropertyMappingDataColumn
    Inherits Object
    Implements System.ComponentModel.INotifyPropertyChanged
    
    Private nameField As String
    
    Private dataTypeField As String
    
    Private allowNullField As Boolean
    
    Public Sub New()
        MyBase.New
        Me.allowNullField = false
    End Sub
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute()>  _
    Public Property Name() As String
        Get
            Return Me.nameField
        End Get
        Set
            Me.nameField = value
            Me.RaisePropertyChanged("Name")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute()>  _
    Public Property DataType() As String
        Get
            Return Me.dataTypeField
        End Get
        Set
            Me.dataTypeField = value
            Me.RaisePropertyChanged("DataType")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute(),  _
     System.ComponentModel.DefaultValueAttribute(false)>  _
    Public Property AllowNull() As Boolean
        Get
            Return Me.allowNullField
        End Get
        Set
            Me.allowNullField = value
            Me.RaisePropertyChanged("AllowNull")
        End Set
    End Property
    
    Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
    
    Protected Sub RaisePropertyChanged(ByVal propertyName As String)
        Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
        If (Not (propertyChanged) Is Nothing) Then
            propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Partial Public Class EntityDatabaseMappingObjectAccessor
    Inherits Object
    Implements System.ComponentModel.INotifyPropertyChanged
    
    Private criterionPropertyNameField() As String
    
    Private typeField As ObjectAccessorType
    
    Private isDefaultField As Boolean
    
    Public Sub New()
        MyBase.New
        Me.isDefaultField = false
    End Sub
    
    '''<remarks/>
    <System.Xml.Serialization.XmlElementAttribute("CriterionPropertyName")>  _
    Public Property CriterionPropertyName() As String()
        Get
            Return Me.criterionPropertyNameField
        End Get
        Set
            Me.criterionPropertyNameField = value
            Me.RaisePropertyChanged("CriterionPropertyName")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute()>  _
    Public Property Type() As ObjectAccessorType
        Get
            Return Me.typeField
        End Get
        Set
            Me.typeField = value
            Me.RaisePropertyChanged("Type")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute(),  _
     System.ComponentModel.DefaultValueAttribute(false)>  _
    Public Property IsDefault() As Boolean
        Get
            Return Me.isDefaultField
        End Get
        Set
            Me.isDefaultField = value
            Me.RaisePropertyChanged("IsDefault")
        End Set
    End Property
    
    Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
    
    Protected Sub RaisePropertyChanged(ByVal propertyName As String)
        Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
        If (Not (propertyChanged) Is Nothing) Then
            propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Public Enum ObjectAccessorType
    
    '''<remarks/>
    Read
    
    '''<remarks/>
    List
    
    '''<remarks/>
    Count
    
    '''<remarks/>
    Delete
End Enum

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Partial Public Class EntityDatabaseMappingScalarAccessor
    Inherits Object
    Implements System.ComponentModel.INotifyPropertyChanged
    
    Private valuePropertyNameField As String
    
    Private criterionPropertyNameField() As String
    
    Private typeField As ScalarAccessorType
    
    '''<remarks/>
    Public Property ValuePropertyName() As String
        Get
            Return Me.valuePropertyNameField
        End Get
        Set
            Me.valuePropertyNameField = value
            Me.RaisePropertyChanged("ValuePropertyName")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlElementAttribute("CriterionPropertyName")>  _
    Public Property CriterionPropertyName() As String()
        Get
            Return Me.criterionPropertyNameField
        End Get
        Set
            Me.criterionPropertyNameField = value
            Me.RaisePropertyChanged("CriterionPropertyName")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute()>  _
    Public Property Type() As ScalarAccessorType
        Get
            Return Me.typeField
        End Get
        Set
            Me.typeField = value
            Me.RaisePropertyChanged("Type")
        End Set
    End Property
    
    Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
    
    Protected Sub RaisePropertyChanged(ByVal propertyName As String)
        Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
        If (Not (propertyChanged) Is Nothing) Then
            propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Public Enum ScalarAccessorType
    
    '''<remarks/>
    [Get]
    
    '''<remarks/>
    [Set]
End Enum

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Partial Public Class EntityDatabaseMappingDalcGeneration
    Inherits Object
    Implements System.ComponentModel.INotifyPropertyChanged
    
    Private targetProjectNameField As String
    
    Private targetSubFolderField As String
    
    Private targetNamespaceField As String
    
    Private targetLanguageField As String
    
    Private instanceNameField As String
    
    Private importNamespaceField() As String
    
    Private cachingField As EntityDatabaseMappingDalcGenerationCaching
    
    Private isEnabledField As Boolean
    
    Public Sub New()
        MyBase.New
        Me.isEnabledField = true
    End Sub
    
    '''<remarks/>
    Public Property TargetProjectName() As String
        Get
            Return Me.targetProjectNameField
        End Get
        Set
            Me.targetProjectNameField = value
            Me.RaisePropertyChanged("TargetProjectName")
        End Set
    End Property
    
    '''<remarks/>
    Public Property TargetSubFolder() As String
        Get
            Return Me.targetSubFolderField
        End Get
        Set
            Me.targetSubFolderField = value
            Me.RaisePropertyChanged("TargetSubFolder")
        End Set
    End Property
    
    '''<remarks/>
    Public Property TargetNamespace() As String
        Get
            Return Me.targetNamespaceField
        End Get
        Set
            Me.targetNamespaceField = value
            Me.RaisePropertyChanged("TargetNamespace")
        End Set
    End Property
    
    '''<remarks/>
    Public Property TargetLanguage() As String
        Get
            Return Me.targetLanguageField
        End Get
        Set
            Me.targetLanguageField = value
            Me.RaisePropertyChanged("TargetLanguage")
        End Set
    End Property
    
    '''<remarks/>
    Public Property InstanceName() As String
        Get
            Return Me.instanceNameField
        End Get
        Set
            Me.instanceNameField = value
            Me.RaisePropertyChanged("InstanceName")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlElementAttribute("ImportNamespace")>  _
    Public Property ImportNamespace() As String()
        Get
            Return Me.importNamespaceField
        End Get
        Set
            Me.importNamespaceField = value
            Me.RaisePropertyChanged("ImportNamespace")
        End Set
    End Property
    
    '''<remarks/>
    Public Property Caching() As EntityDatabaseMappingDalcGenerationCaching
        Get
            Return Me.cachingField
        End Get
        Set
            Me.cachingField = value
            Me.RaisePropertyChanged("Caching")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute(),  _
     System.ComponentModel.DefaultValueAttribute(true)>  _
    Public Property IsEnabled() As Boolean
        Get
            Return Me.isEnabledField
        End Get
        Set
            Me.isEnabledField = value
            Me.RaisePropertyChanged("IsEnabled")
        End Set
    End Property
    
    Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
    
    Protected Sub RaisePropertyChanged(ByVal propertyName As String)
        Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
        If (Not (propertyChanged) Is Nothing) Then
            propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Partial Public Class EntityDatabaseMappingDalcGenerationCaching
    Inherits Object
    Implements System.ComponentModel.INotifyPropertyChanged
    
    Private instanceNameField As String
    
    Private scavengingPriorityField As ScavengingPriority
    
    Private expirationPolicyField As EntityDatabaseMappingDalcGenerationCachingExpirationPolicy
    
    Private isRealTimeField As Boolean
    
    Public Sub New()
        MyBase.New
        Me.scavengingPriorityField = ScavengingPriority.Normal
        Me.isRealTimeField = false
    End Sub
    
    '''<remarks/>
    Public Property InstanceName() As String
        Get
            Return Me.instanceNameField
        End Get
        Set
            Me.instanceNameField = value
            Me.RaisePropertyChanged("InstanceName")
        End Set
    End Property
    
    '''<remarks/>
    <System.ComponentModel.DefaultValueAttribute(ScavengingPriority.Normal)>  _
    Public Property ScavengingPriority() As ScavengingPriority
        Get
            Return Me.scavengingPriorityField
        End Get
        Set
            Me.scavengingPriorityField = value
            Me.RaisePropertyChanged("ScavengingPriority")
        End Set
    End Property
    
    '''<remarks/>
    Public Property ExpirationPolicy() As EntityDatabaseMappingDalcGenerationCachingExpirationPolicy
        Get
            Return Me.expirationPolicyField
        End Get
        Set
            Me.expirationPolicyField = value
            Me.RaisePropertyChanged("ExpirationPolicy")
        End Set
    End Property
    
    '''<remarks/>
    <System.ComponentModel.DefaultValueAttribute(false)>  _
    Public Property IsRealTime() As Boolean
        Get
            Return Me.isRealTimeField
        End Get
        Set
            Me.isRealTimeField = value
            Me.RaisePropertyChanged("IsRealTime")
        End Set
    End Property
    
    Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
    
    Protected Sub RaisePropertyChanged(ByVal propertyName As String)
        Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
        If (Not (propertyChanged) Is Nothing) Then
            propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Public Enum ScavengingPriority
    
    '''<remarks/>
    Low
    
    '''<remarks/>
    Normal
    
    '''<remarks/>
    High
    
    '''<remarks/>
    NotRemovable
End Enum

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Partial Public Class EntityDatabaseMappingDalcGenerationCachingExpirationPolicy
    Inherits Object
    Implements System.ComponentModel.INotifyPropertyChanged
    
    Private absoluteDateTimeField() As String
    
    Private absoluteTimeSpanField() As String
    
    Private slidingTimeSpanField() As String
    
    Private neverField As String
    
    '''<remarks/>
    <System.Xml.Serialization.XmlElementAttribute("AbsoluteDateTime")>  _
    Public Property AbsoluteDateTime() As String()
        Get
            Return Me.absoluteDateTimeField
        End Get
        Set
            Me.absoluteDateTimeField = value
            Me.RaisePropertyChanged("AbsoluteDateTime")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlElementAttribute("AbsoluteTimeSpan")>  _
    Public Property AbsoluteTimeSpan() As String()
        Get
            Return Me.absoluteTimeSpanField
        End Get
        Set
            Me.absoluteTimeSpanField = value
            Me.RaisePropertyChanged("AbsoluteTimeSpan")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlElementAttribute("SlidingTimeSpan")>  _
    Public Property SlidingTimeSpan() As String()
        Get
            Return Me.slidingTimeSpanField
        End Get
        Set
            Me.slidingTimeSpanField = value
            Me.RaisePropertyChanged("SlidingTimeSpan")
        End Set
    End Property
    
    '''<remarks/>
    Public Property Never() As String
        Get
            Return Me.neverField
        End Get
        Set
            Me.neverField = value
            Me.RaisePropertyChanged("Never")
        End Set
    End Property
    
    Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
    
    Protected Sub RaisePropertyChanged(ByVal propertyName As String)
        Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
        If (Not (propertyChanged) Is Nothing) Then
            propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Partial Public Class EntityDatabaseMappingStoredProceduresGeneration
    Inherits Object
    Implements System.ComponentModel.INotifyPropertyChanged
    
    Private targetProjectNameField As String
    
    Private targetSubFolderField As String
    
    Private connectionStringField As String
    
    Private runScriptField As Boolean
    
    Private runScriptFieldSpecified As Boolean
    
    Private databaseNameField As String
    
    Private granteesField() As String
    
    Private isEnabledField As Boolean
    
    Public Sub New()
        MyBase.New
        Me.isEnabledField = true
    End Sub
    
    '''<remarks/>
    Public Property TargetProjectName() As String
        Get
            Return Me.targetProjectNameField
        End Get
        Set
            Me.targetProjectNameField = value
            Me.RaisePropertyChanged("TargetProjectName")
        End Set
    End Property
    
    '''<remarks/>
    Public Property TargetSubFolder() As String
        Get
            Return Me.targetSubFolderField
        End Get
        Set
            Me.targetSubFolderField = value
            Me.RaisePropertyChanged("TargetSubFolder")
        End Set
    End Property
    
    '''<remarks/>
    Public Property ConnectionString() As String
        Get
            Return Me.connectionStringField
        End Get
        Set
            Me.connectionStringField = value
            Me.RaisePropertyChanged("ConnectionString")
        End Set
    End Property
    
    '''<remarks/>
    Public Property RunScript() As Boolean
        Get
            Return Me.runScriptField
        End Get
        Set
            Me.runScriptField = value
            Me.RaisePropertyChanged("RunScript")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIgnoreAttribute()>  _
    Public Property RunScriptSpecified() As Boolean
        Get
            Return Me.runScriptFieldSpecified
        End Get
        Set
            Me.runScriptFieldSpecified = value
            Me.RaisePropertyChanged("RunScriptSpecified")
        End Set
    End Property
    
    '''<remarks/>
    Public Property DatabaseName() As String
        Get
            Return Me.databaseNameField
        End Get
        Set
            Me.databaseNameField = value
            Me.RaisePropertyChanged("DatabaseName")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlArrayItemAttribute("Grantee", IsNullable:=false)>  _
    Public Property Grantees() As String()
        Get
            Return Me.granteesField
        End Get
        Set
            Me.granteesField = value
            Me.RaisePropertyChanged("Grantees")
        End Set
    End Property
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute(),  _
     System.ComponentModel.DefaultValueAttribute(true)>  _
    Public Property IsEnabled() As Boolean
        Get
            Return Me.isEnabledField
        End Get
        Set
            Me.isEnabledField = value
            Me.RaisePropertyChanged("IsEnabled")
        End Set
    End Property
    
    Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
    
    Protected Sub RaisePropertyChanged(ByVal propertyName As String)
        Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
        If (Not (propertyChanged) Is Nothing) Then
            propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Partial Public Class EntityDatabaseMappingConcurrencyManagement
    Inherits Object
    Implements System.ComponentModel.INotifyPropertyChanged
    
    Private timestampColumnNameField As String
    
    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute()>  _
    Public Property TimestampColumnName() As String
        Get
            Return Me.timestampColumnNameField
        End Get
        Set
            Me.timestampColumnNameField = value
            Me.RaisePropertyChanged("TimestampColumnName")
        End Set
    End Property
    
    Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
    
    Protected Sub RaisePropertyChanged(ByVal propertyName As String)
        Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
        If (Not (propertyChanged) Is Nothing) Then
            propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
        End If
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Public Enum TypeAccessibilityModifier
    
    '''<remarks/>
    [Public]
    
    '''<remarks/>
    [Friend]
End Enum

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1"),  _
 System.SerializableAttribute(),  _
 System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.perceptible.net/Oxygen/Entity/2006-04-18")>  _
Public Enum TypeInheritanceModifier
    
    '''<remarks/>
    None
    
    '''<remarks/>
    [MustInherit]
    
    '''<remarks/>
    [NotInheritable]
End Enum
